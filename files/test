
<p>Following is the list of tips for computer scientists that I gathered from various sources</p>
<ul>
<li><a href="http://www.sce.carleton.ca/faculty/chinneck/thesis.html">How to Organize your Thesis</a>, by John W. Chinneck.</li>
<li><a href="http://cs.stanford.edu/people/widom/paper-writing.html">Tips for Writing Technical Papers 1</a>, by Jennifer Widom.</li>
<li><a href="http://www.cs.columbia.edu/~hgs/etc/writing-style.html">Tips for Writing Technical Papers 2</a>, by Jennifer Widom.</li>
<li><a href="http://john.regehr.org/reading_list/">A Reading List for Computer Scientists</a>, by John Regehr.</li>
<li><a href="http://john.regehr.org/reading_list/science.html">The Science of Scientific Writing</a>, by George D. Gopen and Judith A. Swan.</li>
<li><a href="http://laboratoirehubertcurien.fr/">How To Have Your Abstract Rejected</a>, by van Leunen and Lipton.</li>

</ul>
<h2>A List of Interesting Articles about Databases</h2>
<p>This list is summerised from <a href="https://github.com/rxin/db-readings/blob/master/README.md">Reynold Xin list </a></p>
<h3>  Basics and Algorithms</h3>
<li><a href="http://www.cs.berkeley.edu/~rxin/db-papers/5-min-rule.pdf">The Five-Minute Rule Ten Years Later, and Other Computer Storage Rules of Thumb (1997) </a>: This paper (and the original one proposed 10 years earlier) illustrates a quantitative formula to calculate whether a data page should be cached in memory or not. It is a delight to read Jim Gray approach to an array of related problems, e.g. how big should a page size be.</li>
<li> <a href="http://www.cs.berkeley.edu/~rxin/db-papers/alphasort.pdf"> AlphaSort: A Cache-Sensitive Parallel External Sort (1995):</a> Sorting is one of the most essential algorithms in databases, as it is used to do joins, aggregations, and sorts. In algorithms 101 class, CS students are asked to reason about big O complexity and ignore the constant factor. In practice, however, the change in constant from L2 cache can be as big as two or three orders of magnitude. This is a good paper to learn about all the tricks fast sorting implementations use.</li>
<li> <a href="http://research.microsoft.com/pubs/209622/patsort-sigmod14.pdf">Patience is a Virtue: Revisiting Merge and Sort on Modern Processors (2014): Sorting revisited.</a> Actually also a good survey on sorting algorithms used in practice and their trade-offs.</li>